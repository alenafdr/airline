<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FlightMapper">

    <resultMap id="FlightResultMap" type="Flight" autoMapping="false">
        <constructor>
            <idArg column="id" javaType="Long" />
        </constructor>
        <id column="id" property="id" />
        <result property="flightName" column="flight_name" />
        <result property="fromTown" column="from_town" />
        <result property="toTown" column="to_town" />
        <result property="approved" column="approved" />
        <result property="startTime" column="start_time"/>
        <result property="duration" column="duration"/>
        <result property="fromDate" column="from_date" />
        <result property="toDate" column="to_date" />
        <association property="plane"
                     resultMap="PlaneMapper.PlaneResultMap" />
        <collection property="prices"
                    column="id"
                    select="PriceMapper.selectPricesForFlight"
                    ofType="Price"/>
        <collection property="periods"
                    column="id"
                    select="PeriodMapper.selectPeriodsByFlightId"
                    ofType="Period"/>
        <collection property="departures"
                    column="id"
                    select="DepartureMapper.selectDeparturesByFlightId"
                    ofType="Departure"/>
    </resultMap>
    <resultMap id="FlightResultMapForDeparture" type="Flight" autoMapping="false">
        <constructor>
            <idArg column="id" javaType="Long" />
        </constructor>
        <id column="id" property="id" />
        <result property="flightName" column="flight_name" />
        <result property="fromTown" column="from_town" />
        <result property="toTown" column="to_town" />
        <result property="approved" column="approved" />
        <result property="startTime" column="start_time"/>
        <result property="duration" column="duration"/>
        <result property="fromDate" column="from_date" />
        <result property="toDate" column="to_date" />
        <association property="plane"
                     resultMap="PlaneMapper.PlaneResultMap" />
        <collection property="prices"
                    column="id"
                    select="PriceMapper.selectPricesForFlight"
                    ofType="Price"/>
        <collection property="periods"
                    column="id"
                    select="PeriodMapper.selectPeriodsByFlightId"
                    ofType="Period"/>
    </resultMap>
    <insert id="insertFlight" parameterType="Flight">
        <selectKey resultType="Long" keyProperty="id" order="AFTER" >
            SELECT currval('flights_id_seq')
        </selectKey>
      insert into flights (flight_name,flight_plane_id,from_town,to_town,start_time,duration,from_date,to_date)
      values (#{flightName},#{plane.id},#{fromTown},#{toTown},#{startTime},#{duration},#{fromDate},#{toDate})
    </insert>

    <select id="selectFlightById" parameterType="Long" resultMap="FlightResultMap" >
        select
        f.id,
        f.flight_name,
        f.from_town,
        f.to_town,
        f.start_time,
        f.duration,
        f.from_date,
        f.to_date,
        f.approved,
        f.flight_plane_id,
        p.plane_id,
        p.name,
        p.bussiness_row,
        p.economy_row,
        p.places_in_business_row,
        p.places_in_economy_row
        from flights f
        left join planes p on f.flight_plane_id = p.plane_id
        where f.id = #{id};
    </select>

    <select id="selectFlightForDeparture" parameterType="Long" resultMap="FlightResultMapForDeparture" >
        select
        f.id,
        f.flight_name,
        f.from_town,
        f.to_town,
        f.start_time,
        f.duration,
        f.from_date,
        f.to_date,
        f.approved,
        f.flight_plane_id,
        p.plane_id,
        p.name,
        p.bussiness_row,
        p.economy_row,
        p.places_in_business_row,
        p.places_in_economy_row
        from flights f
        left join planes p on f.flight_plane_id = p.plane_id
        where f.id = #{id};
    </select>
    <update id="updateFlight">
      update flights
      set
      flight_name = #{flightName},
      flight_plane_id = #{plane.id},
      from_town = #{fromTown},
      to_town = #{toTown},
      duration = #{duration},
      start_time = #{startTime},
      from_date = #{fromDate},
      to_date = #{toDate},
      approved = #{approved}
      where id = #{id}
    </update>
    <delete id="deleteFlight">
      delete from flights where id = #{id}
    </delete>
</mapper>


